/dartfs/rc/lab/V/VaickusL_slow/users/jlevy/arctic_ai/prototype_validation_study
# 0. pull cases, set up directories
0_case_list_dir_setup.ipynb

# 1. extract patch information
for basename in $(comm -3 <( ls inputs/*.npy | xargs -I F basename F .npy | sort ) <(ls patch_info/tumor/*.pkl | xargs -I F basename F .pkl | sort)); do submit-job run_torque_job -c "singularity  exec --nv -B /scratch/ -B $(realpath ../../..)  --bind ${HOME}:/mnt /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img python 0_extract_patch_info.py --basename ${basename}" -i "conda activate pathflow" -ao "-A QDP-Alpha -l nodes=1:ppn=8 -l feature=v100" -t 1 -n 0 -q gpuq ; done
# update
for basename in $(comm -3 <( ls new_test_slides/ASAP_Tiff/*.tif | xargs -I F basename F _ASAP.tif | sort ) <(ls updated_patch_info/tumor/*.pkl | xargs -I F basename F .pkl | sort)); do submit-job run_torque_job -c "singularity  exec --nv -B /scratch/ -B $(realpath ../../..)  --bind ${HOME}:/mnt /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img python 0_extract_patch_info.py --basename ${basename} --input_dir new_test_slides/ASAP_Tiff/ --output_dir updated_patch_info/" -i "conda activate pathflow" -ao "-A QDP-Alpha -l nodes=1:ppn=1 -l feature=v100" -t 1 -n 0 -q gpuq ; done

for basename in $(comm -3 <( ls new_skin_layers/Skin_Layer_ASAP_TIFF/*.tif | xargs -I F basename F _ASAP.tif | sort ) <(ls updated_patch_info_skin_layers/tumor/*.pkl | xargs -I F basename F .pkl | sort)); do submit-job run_torque_job -c "singularity  exec --nv -B /scratch/ -B $(realpath ../../..)  --bind ${HOME}:/mnt /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img python 0_extract_patch_info.py --basename ${basename} --input_dir new_skin_layers/Skin_Layer_ASAP_TIFF/ --output_dir updated_patch_info_skin_layers/" -i "conda activate pathflow" -ao "-A QDP-Alpha -l nodes=1:ppn=1 -l feature=v100" -t 1 -n 0 -q gpuq ; done


# 2. apply annotations to patch information; verify annotations okay based on overlap with patch info
1_apply_annotations.ipynb

# 3. generate CNN inputs
2_write_CNN_data.ipynb

# 4. partition datasets (separate test set; one train/val/maybe test with patient clustering; split by amount of tumor dichotomized; separate test set no annotations by excel)
2_write_CNN_data.ipynb # see splits in pickle datasets

# 5. train CNN models
# first pass
# pretrained
export SINGULARITYENV_PREPEND_PATH=/dartfs-hpc/rc/home/w/f003k8w/.local/bin/
nohup singularity exec --nv  -B /scratch/ -B $(realpath ../../../..)  --bind ${HOME}:/mnt  /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img pathpretrain --class_balance True --inputs_dir patches/macro/ --checkpoints_dir checkpoints_cnn_macro/  --num_classes 4 --verbose True --batch_size 256 --model_save_loc macro_cnn.pkl --gpu_id 2 --pickle_dataset True &
nohup singularity exec --nv  -B /scratch/ -B $(realpath ../../../..)  --bind ${HOME}:/mnt  /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img pathpretrain --class_balance True --inputs_dir patches/tumor/ --checkpoints_dir checkpoints_cnn_tumor/  --num_classes 3 --verbose True --batch_size 256 --model_save_loc tumor_cnn.pkl --gpu_id 3 --pickle_dataset True &
# finetune
export SINGULARITYENV_PREPEND_PATH=/dartfs-hpc/rc/home/w/f003k8w/.local/bin/
nohup singularity exec --nv  -B /scratch/ -B $(realpath ../../../..)  --bind ${HOME}:/mnt  /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img pathpretrain --class_balance True --inputs_dir patches/macro/ --checkpoints_dir checkpoints_cnn_macro_round_2/ --pretrained_save_loc checkpoints_cnn_macro/16.epoch.checkpoint.pth --num_classes 4 --verbose True --batch_size 256 --model_save_loc macro_cnn.pkl --gpu_id 2 --pickle_dataset True &
nohup singularity exec --nv  -B /scratch/ -B $(realpath ../../../..)  --bind ${HOME}:/mnt  /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img pathpretrain --class_balance True --inputs_dir patches/tumor/ --checkpoints_dir checkpoints_cnn_tumor_round_2/ --pretrained_save_loc checkpoints_cnn_tumor/9.epoch.checkpoint.pth  --num_classes 3 --verbose True --batch_size 256 --model_save_loc tumor_cnn.pkl --gpu_id 3 --pickle_dataset True &
# predict on train, val
singularity exec --nv  -B /scratch/ -B $(realpath ../../../..)  --bind ${HOME}:/mnt  /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img pathpretrain --predictions_save_path pred_train_tumor_tmp.pkl --class_balance True --inputs_dir patches/tumor/ --checkpoints_dir checkpoints_cnn_tumor_round_2/ --predict True --predict_set train --model_save_loc checkpoints_cnn_tumor_round_2/9.epoch.checkpoint.pth  --num_classes 3 --verbose True --batch_size 256 --gpu_id 3 --pickle_dataset True
singularity exec --nv  -B /scratch/ -B $(realpath ../../../..)  --bind ${HOME}:/mnt  /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img pathpretrain --predictions_save_path pred_train_macro_tmp.pkl --class_balance True --inputs_dir patches/macro/ --checkpoints_dir checkpoints_cnn_macro_round_2/ --predict True --predict_set train --model_save_loc checkpoints_cnn_macro_round_2/0.epoch.checkpoint.pth  --num_classes 4 --verbose True --batch_size 256 --gpu_id 3 --pickle_dataset True
singularity exec --nv  -B /scratch/ -B $(realpath ../../../..)  --bind ${HOME}:/mnt  /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img pathpretrain --predictions_save_path pred_val_tumor_tmp.pkl --class_balance True --inputs_dir patches/tumor/ --checkpoints_dir checkpoints_cnn_tumor_round_2/ --predict True --predict_set val --model_save_loc checkpoints_cnn_tumor_round_2/9.epoch.checkpoint.pth  --num_classes 3 --verbose True --batch_size 256 --gpu_id 3 --pickle_dataset True
singularity exec --nv  -B /scratch/ -B $(realpath ../../../..)  --bind ${HOME}:/mnt  /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img pathpretrain --predictions_save_path pred_val_macro_tmp.pkl --class_balance True --inputs_dir patches/macro/ --checkpoints_dir checkpoints_cnn_macro_round_2/ --predict True --predict_set val --model_save_loc checkpoints_cnn_macro_round_2/0.epoch.checkpoint.pth  --num_classes 4 --verbose True --batch_size 256 --gpu_id 3 --pickle_dataset True

# second pass
export SINGULARITYENV_PREPEND_PATH=/dartfs-hpc/rc/home/w/f003k8w/.local/bin/
nohup singularity exec --nv  -B /scratch/ -B $(realpath ../../../..)  --bind ${HOME}:/mnt  /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img pathpretrain --class_balance True --inputs_dir updated_patches/macro/ --checkpoints_dir updated_checkpoints_cnn_macro_v2/  --num_classes 4 --verbose True --batch_size 256 --model_save_loc updated_macro_cnn.pkl --gpu_id 2 --pickle_dataset True &
nohup singularity exec --nv  -B /scratch/ -B $(realpath ../../../..)  --bind ${HOME}:/mnt  /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img pathpretrain --class_balance True --inputs_dir updated_patches/tumor/ --checkpoints_dir updated_checkpoints_cnn_tumor/  --num_classes 3 --verbose True --batch_size 256 --model_save_loc updated_tumor_cnn.pkl --gpu_id 3 --pickle_dataset True &

singularity exec --nv  -B /scratch/ -B $(realpath ../../../..)  --bind ${HOME}:/mnt  /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img pathpretrain --predictions_save_path pred_val_tumor_tmp.pkl --class_balance True --inputs_dir updated_patches/tumor/ --checkpoints_dir updated_checkpoints_cnn_tumor/ --predict True --predict_set val --model_save_loc updated_checkpoints_cnn_tumor/30.epoch.checkpoint.pth  --num_classes 3 --verbose True --batch_size 256 --gpu_id 3 --pickle_dataset True
singularity exec --nv  -B /scratch/ -B $(realpath ../../../..)  --bind ${HOME}:/mnt  /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img pathpretrain --predictions_save_path pred_val_macro_tmp.pkl --class_balance True --inputs_dir updated_patches/macro/ --checkpoints_dir updated_checkpoints_cnn_macro_v2/ --predict True --predict_set val --model_save_loc updated_checkpoints_cnn_macro_v2/24.epoch.checkpoint.pth  --num_classes 4 --verbose True --batch_size 256 --gpu_id 3 --pickle_dataset True

# 6. extract embeddings

new_test_slides/ASAP_Tiff/
new_skin_layers/Skin_Layer_ASAP_TIFF/
sed -e 's/.*-gpu//g'
#&& unset CUDA_VISIBLE_DEVICES && export CUDA_VISIBLE_DEVICES=\${gpuNum}


for f in $(ls new_test_slides/new_tiff/*.tif | xargs -I F basename F .tif | sort ); do  submit-job run_torque_job -c "export SINGULARITYENV_CUDA_VISIBLE_DEVICES=\${gpuNum} && export SINGULARITYENV_PREPEND_PATH=/dartfs-hpc/rc/home/w/f003k8w/.local/bin/ && singularity exec --nv -B /dartfs/rc/lab/V/VaickusL_slow/  --bind ${HOME}:/mnt  /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img pathpretrain --tensor_dataset False --pickle_dataset True --inputs_dir updated_patches/tumor/ --checkpoints_dir updated_checkpoints_cnn_tumor --num_classes 3 --verbose True --batch_size 32 --model_save_loc updated_checkpoints_cnn_tumor/30.epoch.checkpoint.pth --embedding_out_dir cnn_embeddings/tumor/ --extract_embeddings_df updated_model_patch_annotations/tumor_annot_gnn_annot.pkl --extract_embeddings new_test_slides/new_tiff/${f}.tif --predict True" -a "gpuNum=\$(cat \$PBS_GPUFILE | tail -c 2)" -a "echo \${gpuNum} " -ao "-A QDP-Alpha -l nodes=1:ppn=8:gpus=1 -l feature=v100" -t 1 -n 0 -q "gpuq" ; done

for f in $(ls new_skin_layers/skin_layer_tiff/*.tif | xargs -I F basename F .tif | sort ); do  submit-job run_torque_job -c "export SINGULARITYENV_CUDA_VISIBLE_DEVICES=\${gpuNum} && export SINGULARITYENV_PREPEND_PATH=/dartfs-hpc/rc/home/w/f003k8w/.local/bin/ && singularity exec --nv -B /dartfs/rc/lab/V/VaickusL_slow/  --bind ${HOME}:/mnt  /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img pathpretrain --tensor_dataset False --pickle_dataset True --inputs_dir updated_patches/macro/ --checkpoints_dir updated_checkpoints_cnn_macro_v2 --num_classes 4 --verbose True --batch_size 32 --model_save_loc updated_checkpoints_cnn_macro_v2/24.epoch.checkpoint.pth --embedding_out_dir cnn_embeddings/macro/ --extract_embeddings_df updated_model_patch_annotations/macro_annot_gnn_annot.pkl --extract_embeddings new_skin_layers/skin_layer_tiff/${f}.tif --predict True" -a "gpuNum=\$(cat \$PBS_GPUFILE | tail -c 2)" -a "echo \${gpuNum} " -ao "-A QDP-Alpha -l nodes=1:ppn=8:gpus=1 -l feature=v100" -t 1 -n 0 -q "gpuq" ; done

# 7. generate GNN inputs, thumbnails
# create db file first, then patch embedding extraction

# 8. train GNN models

# 9. Future: train nuclei model, don't do for now

# 10. test on held-out test set

# 11. run on all validation slides
/dartfs/rc/lab/V/VaickusL_slow/users/jlevy/arctic_ai/prototype_validation_study

nodes=(p02 p03 p04)
for patient in 105_A2 306_A1 15_A1 153_A1 293_A1 89_A1 120_B1 151_A1 48_A1 3_A2 60_A1 163_A1 189_A1 71_A1 147_A1 9_A7 100_B1 117_A1 118_A1 108_A1 44_A1 242_A1 53_A1 297_A1 120_A1 20_B1 95_A1 234_A1 171_A1 166_A1 26_A1 301_A1 91_A2 97_A1 245_A1 178_A1 173_A1 230_A2 102_A1 67_A1 236_A3 46_A2 135_A1 51_C1 75_A1 117_A1 119_A1 48_A2 140_A1 86_A1 104_A1 37_A2 41_A2 100_A1 276_A1 49_A1 102_A1 252_A1 51_A1 105_A1 41_A2 11_A1 163_A1 158_A1 3_A2 107_A1 287_A1 51_B1 160_A2 329_A1 75_A1 76_A1 88_A1 322_B1 41_A1 286_B1 307_A1 100_C1 236_A4 121_B1 76_A1 302_A1 60_A1 100_B1 37_A1 236_A2 125_A2 252_A2 127_A1 19_A1 3_A2 325_A1 41_A1 125_A2 78_A2 124_A1 41_A1 146_A1 28_A2 67_A1 142_A1 146_A1 326_A1 37_A2 317_A1 291_A1 5_A1 274_A1 326_A1 140_A1 220_A1 220_A2 46_A2 230_A1 47_A1 52_A1 26_A2 297_A1 90_A2 163_B2 282_A1 97_A1 163_A1 33_A1 322_A2 88_A2 321_A1 219_A1 26_A2 131_B1 316_A1 43_A2 5_A1 190_A1 66_A1 117_A1 147_A1 105_A1 20_B1 182_A1 179_A1 65_A1 89_A1 248_A1 135_A1 264_A1 212_A1 85_A1 36_B2 151_A1 107_A1 41_A2 252_A1 48_A2 125_A2 95_A2 322_B2 108_A1 160_A1 153_A1 62_A1; do submit-job run-torque-job -c "export SINGULARITYENV_CUDA_VISIBLE_DEVICES=\${gpuNum} && export SINGULARITYENV_PREPEND_PATH=/dartfs-hpc/rc/home/w/f003k8w/.local/bin/ && singularity exec --nv -B /dartfs/rc/lab/V/VaickusL_slow/  --bind ${HOME}:/mnt  /dartfs/rc/lab/V/VaickusL_slow/singularity_containers/PathFlow/pathflowgcn_new.img arctic_ai run_series --patient ${patient} --compression 6. --overwrite False " -a "gpuNum=\$(cat \$PBS_GPUFILE | tail -c 2)" -a "echo \${gpuNum} " -ao "-A QDP-Alpha -l host=$(printf "%s\n" ${nodes[@]} | shuf | head -1) -l nodes=1:ppn=8:gpus=1:default -l feature=v100" -t 1 -n 0 -q "gpuq" ; done
